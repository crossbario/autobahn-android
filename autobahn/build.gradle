apply plugin: getPlugin()

String PLUGIN_ANDROID = "com.android.library"

String getPlugin() {
    String buildPlugin = project.properties.get("buildPlatform")
    switch (buildPlugin) {
        case "netty":
            return "java-library-distribution"
        default:
            return "com.android.library"
    }
}

if (plugins.hasPlugin(PLUGIN_ANDROID)) {
    android {
        compileSdkVersion 26
        buildToolsVersion "25.0.2"
        useLibrary 'org.apache.http.legacy'

        defaultConfig {
            minSdkVersion 24
            targetSdkVersion 26
        }

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            }
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }
} else {
    sourceSets {
        main {
            java {
                include 'io/crossbar/autobahn/wamp/**'
            }
        }
    }
    distributions {
        main {
            baseName = 'autobahn'
        }
    }
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-core:2.8.8'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.8.8'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:2.8.8'
    implementation 'io.netty:netty-codec-http:4.1.2.Final'
    implementation 'io.netty:netty-handler:4.1.2.Final'
    if (!plugins.hasPlugin(PLUGIN_ANDROID)) {
        runtime 'com.fasterxml.jackson.core:jackson-core:2.8.8'
        runtime 'com.fasterxml.jackson.core:jackson-databind:2.8.8'
        runtime 'com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:2.8.8'
        runtime 'io.netty:netty-codec-http:4.1.2.Final'
        runtime 'io.netty:netty-handler:4.1.2.Final'
    }
}
